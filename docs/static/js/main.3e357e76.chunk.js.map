{"version":3,"sources":["utils/index.js","components/Contract/index.js","cons.js","components/CrowdFunding/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","props","state","texto","sponsor","level","levelPrice","balanceUSDT","aprovedUSDT","contractUSDT","deposit","bind","estado","Utils","window","setInterval","accountAddress","defaultAddress","base58","activeLevels","i","usersActiveX3Levels","call","tokenUSDT","tokenAddress","balanceOf","parseInt","_hex","allowance","aproved","remaining","text","setState","amount","parseFloat","trx","getBalance","balanceInTRX","console","log","owner","direccionSP","address","fromHex","approve","send","LAST_LEVEL","loc","document","location","href","indexOf","getString","split","GET","get","l","length","tmp","unescape","decodeURI","idToAddress","inversor","isUserExists","buyNewLevel","registrationExt","alert","getElementById","value","className","onClick","Component","direccion","link","registered","balanceRef","totalRef","invested","paidAt","my","withdrawn","canastas","key","style","Investors","Link","withdraw","getAccount","mydireccion","users","user","id","canasta","usersX3Matrix","matrix","src","alt","width","cosa","available","toFixed","type","TronLinkInfo","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","account","accountAddressInBase58","balanceInSun","fromSun","getBandwidth","WEBSTORE_URL","logo","TronLinkLogo","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","hex","toHex","on","data-setbg","root","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.3e357e76.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","import cons from \"../../cons.js\";\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\n\r\nconst SC = \"TJcELfBcR2WEWUoj7acdHqBddGzaYhBVwW\";// direccion del contrato\r\n\r\nexport default {proxy, SC};","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      texto: \"Loading...\",\r\n      sponsor: \"\",\r\n      level: \"Loading...\",\r\n      levelPrice: 0,\r\n      balanceUSDT: \"Loading...\",\r\n      aprovedUSDT: 0,\r\n      contractUSDT:{}\r\n  \r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.estado = this.estado.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.estado();\r\n    setInterval(() => this.estado(),1*1000);\r\n  };\r\n\r\n  async estado(){\r\n    \r\n    var accountAddress = window.tronWeb.defaultAddress.base58\r\n\r\n    //console.log(accountAddress);\r\n\r\n    var activeLevels = 0;\r\n\r\n    for (var i = 15; i >= 0; i--) {\r\n\r\n      if (await Utils.contract.usersActiveX3Levels(accountAddress, i).call()) {\r\n        activeLevels++ ;\r\n      }\r\n      \r\n    }\r\n\r\n    var levelPrice = await Utils.contract.levelPrice(activeLevels+1).call();\r\n\r\n    var tokenAddress = await Utils.contract.tokenUSDT().call();\r\n\r\n    const contractUSDT = await window.tronWeb.contract().at(tokenAddress);\r\n\r\n    var balanceUSDT = await contractUSDT.balanceOf(accountAddress).call();\r\n\r\n    balanceUSDT = parseInt(balanceUSDT._hex)/10**6;\r\n\r\n    var aproved = await contractUSDT.allowance(accountAddress, contractAddress).call();\r\n\r\n    //console.log(aproved);\r\n\r\n    aproved = parseInt(aproved.remaining._hex)/10**6;\r\n\r\n    var text;\r\n    if(aproved > 0){\r\n      if (activeLevels === 0){\r\n        text = \"Register and buy the first level\"\r\n      }else{\r\n        text = \"Buy next level\"\r\n      }\r\n      \r\n    }else{\r\n      text = \"Link Wallet\"\r\n    }\r\n\r\n    this.setState({\r\n      level: activeLevels,\r\n      levelPrice: parseInt(levelPrice._hex)/10**6,\r\n      balanceUSDT: balanceUSDT,\r\n      texto: text,\r\n      aprovedUSDT: aproved,\r\n      contractUSDT: contractUSDT\r\n    });\r\n\r\n    //console.log(min);\r\n  }\r\n\r\n\r\n  async deposit() {\r\n\r\n    const { level, levelPrice, balanceUSDT, aprovedUSDT, contractUSDT} = this.state;\r\n\r\n    var amount = levelPrice;\r\n\r\n    amount = parseFloat(amount);\r\n\r\n    var accountAddress =  window.tronWeb.defaultAddress.base58;\r\n\r\n    var balanceInTRX  = await window.tronWeb.trx.getBalance(); //number\r\n    balanceInTRX = balanceInTRX/10**6;\r\n\r\n    console.log(balanceInTRX);\r\n    console.log(amount);\r\n\r\n    var owner = await Utils.contract.owner().call();\r\n\r\n    var direccionSP = window.tronWeb.address.fromHex(owner);\r\n\r\n    var aproved = aprovedUSDT;\r\n\r\n    if ( aproved <= 0 ) {\r\n      await contractUSDT.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\r\n      return;\r\n    }\r\n\r\n    var LAST_LEVEL = await Utils.contract.LAST_LEVEL().call();\r\n\r\n    if ( balanceInTRX >= 50 && aproved >= amount && balanceUSDT >= amount && level < LAST_LEVEL){\r\n\r\n      var loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n          var getString = loc.split('?')[1];\r\n          var GET = getString.split('&');\r\n          var get = {};\r\n          for(var i = 0, l = GET.length; i < l; i++){\r\n              var tmp = GET[i].split('=');\r\n              get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n          }\r\n          \r\n          if (get['ref']) {\r\n            tmp = get['ref'].split('#');\r\n\r\n            var inversor = await Utils.contract.idToAddress(tmp[0]).call();\r\n\r\n            if ( await Utils.contract.isUserExists(inversor).call() ) {\r\n\r\n              direccionSP = window.tronWeb.address.fromHex(inversor);\r\n            \r\n            }\r\n          }     \r\n        }\r\n\r\n        this.setState({\r\n          sponsor: direccionSP\r\n        });\r\n\r\n\r\n        if ( await Utils.contract.isUserExists(accountAddress).call() ) {\r\n\r\n\r\n          await Utils.contract.buyNewLevel(level+1, amount*10**6).send();\r\n\r\n\r\n        }else{\r\n\r\n          await Utils.contract.registrationExt(direccionSP, amount*10**6).send();\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }else{\r\n      \r\n      if (amount > 200 && balanceInTRX > 250) {\r\n\r\n        if ( amount > balanceInTRX) {\r\n          if (balanceInTRX <= 50) {\r\n            window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\r\n          }else{\r\n            document.getElementById(\"amount\").value = balanceInTRX-50;\r\n            window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\r\n          }\r\n          \r\n          \r\n\r\n        }else{\r\n\r\n          document.getElementById(\"amount\").value = amount-50;\r\n          window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\r\n          \r\n        }\r\n      }else{\r\n        window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            Balance: {this.state.balanceUSDT} <strong>USDT</strong><br />\r\n          </h6>\r\n\r\n          <h3>current level = {this.state.level}</h3>\r\n\r\n            <button  onClick={() => this.deposit()} className=\"primary-btn\">{this.state.texto}</button>\r\n            <p>Price {this.state.levelPrice} USDT</p>\r\n            <p>You must have ~ 50 TRX to make the transaction</p>\r\n            \r\n          \r\n        </div>\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0,\r\n      canastas: [(\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+1}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 1 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+2}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 2 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+3}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 3 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+4}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 4 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+5}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 5 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+6}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 6 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+7}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 7 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+8}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 8 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+9}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 9 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+10}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 10 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+11}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 11 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+12}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 12 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+13}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 13 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+14}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 14 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+15}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 15 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      )\r\n    ]\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Link(),1*1000);\r\n    setInterval(() => this.Investors(),7*1000);\r\n  };\r\n\r\n  async Link() {\r\n\r\n    let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address);\r\n\r\n      var user = await Utils.contract.users(mydireccion).call();\r\n\r\n    if( await Utils.contract.isUserExists(mydireccion).call() ){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      \r\n\r\n      mydireccion = loc+'?ref='+parseInt(user.id._hex);\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var canasta = this.state.canastas;\r\n\r\n    for (var i = 1; i <= 15; i++) {\r\n\r\n      if (await Utils.contract.usersActiveX3Levels(direccion, i).call()) {\r\n\r\n        var matrix = await Utils.contract.usersX3Matrix(direccion, i).call();\r\n        matrix[3] = parseInt(matrix[3]._hex);\r\n        //console.log(matrix);\r\n        canasta[i-1] = (\r\n          <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+i}>\r\n            <div className=\"choose__item\">\r\n                <img src={\"img/choose/choose-\"+i+\".svg\"} alt=\"\" width=\"50%\" />\r\n                <h5>Level</h5>\r\n                <p>Referers {matrix[1].length+(matrix[3]*3)} <strong>|</strong> cycles {matrix[3]}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      }else{\r\n\r\n        canasta[i-1] = (\r\n          <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+i}>\r\n            <div className=\"choose__item\">\r\n                <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level {i} (Inactive) </strong></span>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      }\r\n\r\n      this.setState({\r\n        canastas:canasta\r\n  \r\n      });\r\n\r\n    }\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    var cosa = await Utils.contract.withdraw().send();\r\n    console.log(cosa);\r\n  };\r\n\r\n\r\n  render() {\r\n    var { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\r\n\r\n    var available = (balanceRef+my);\r\n    available = available.toFixed(6);\r\n    available = parseFloat(available);\r\n\r\n    balanceRef = balanceRef.toFixed(6);\r\n    balanceRef = parseFloat(balanceRef);\r\n\r\n    totalRef = totalRef.toFixed(6);\r\n    totalRef = parseFloat(totalRef);\r\n\r\n    invested = invested.toFixed(6);\r\n    invested = parseFloat(invested);\r\n\r\n    withdrawn = withdrawn.toFixed(6);\r\n    withdrawn = parseFloat(withdrawn);\r\n\r\n    my = my.toFixed(6);\r\n    my = parseFloat(my);\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n<div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"section-title\">\r\n                        <h2>My referral link:</h2>\r\n                        <p>\r\n                            <a style={{\"color\":\"blue\"}} href={link}>{link}</a> &nbsp;&nbsp;\r\n                            <CopyToClipboard text={link}>\r\n                              <button type=\"button\" className=\"primary-btn\">Copy</button>\r\n                            </CopyToClipboard>\r\n                          </p>\r\n                    </div>\r\n                </div>\r\n            </div>        \r\n\r\n          <div className=\"row\">\r\n\r\n            {this.state.canastas}\r\n                    \r\n          </div>\r\n\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  };\r\n\r\n  \r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  };\r\n\r\n\r\n  async fetchAccountAddress() {\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n      accountAddress\r\n    );\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  };\r\n\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  };\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance } = this.state;\r\n    return (\r\n\r\n      <>\r\n        \r\n        <h2>\r\n          Wallet:\r\n        </h2>\r\n        <p>\r\n            <strong>{accountAddress}</strong><br/><br/>\r\n\r\n          <strong>Balance:</strong><br/>\r\n            {accountBalance} <strong>TRX</strong><br/>\r\n            \r\n        </p>\r\n      </>\r\n\r\n    \r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-sm-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-sm-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <div className='tronLink row' onClick={ openTronLink } style={{'padding': '3em'}}>\r\n\r\n            <div className='info col-sm-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div> \r\n\r\n    </>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          console.log(\"intento \"+tries);\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n\r\n      <>\r\n        <section className=\"hero set-bg\" data-setbg=\"img/hero-bg.jpg\" style={{\"backgroundImage\": \"url('img/hero-bg.jpg')\"}}>\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-lg-5\">\r\n                      <div className=\"hero__text\">\r\n                          <TronLinkInfo tronWeb={window.tronWeb}/>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"col-lg-5 offset-lg-2\">\r\n                      <div className=\"hero__form\">\r\n                          \r\n                          <CrowdFunding />\r\n                          \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"choose spad\">\r\n          <div className=\"container\">\r\n            <Oficina /> \r\n          </div>\r\n        </section>\r\n\r\n      </>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}