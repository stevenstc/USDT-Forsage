{"version":3,"sources":["utils/index.js","components/Contract/index.js","cons.js","components/CrowdFunding/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","props","state","texto","sponsor","level","levelPrice","balanceUSDT","deposit","bind","estado","Utils","window","setInterval","trx","getAccount","accountAddress","address","fromHex","activeLevels","i","usersActiveX3Levels","call","balanceOfUSDT","parseInt","_hex","allowanceUSDT","aproved","console","log","setState","amount","parseFloat","getBalance","balanceInSun","balanceInTRX","fromSun","owner","direccionSP","LAST_LEVEL","loc","document","location","href","indexOf","getString","split","GET","get","l","length","tmp","unescape","decodeURI","idToAddress","inversor","isUserExists","buyNewLevel","send","registrationExt","approveUSDT","alert","getElementById","value","className","onClick","Component","direccion","link","registered","balanceRef","totalRef","invested","paidAt","my","withdrawn","Investors","Link","withdraw","mydireccion","users","user","id","canasta","usersX3Matrix","matrix","key","src","alt","width","canastas","cosa","available","toFixed","style","text","type","TronLinkInfo","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","account","accountAddressInBase58","getBandwidth","WEBSTORE_URL","logo","TronLinkLogo","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","data-setbg","root","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.31787d03.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","import cons from \"../../cons.js\";\r\n/// La direccion de su contrato ac√° ///////////////////////////////////\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\n\r\nconst SC = \"TUKB7EPZUoctNde8gePW3zgsmnQaza3YrM\";// direccion del contrato\r\n\r\nexport default {proxy, SC};","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      texto: \"Loading...\",\r\n      sponsor: \"\",\r\n      level: \"Loading...\",\r\n      levelPrice: 0,\r\n      balanceUSDT: \"Loading...\"\r\n  \r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.estado = this.estado.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.estado();\r\n    setInterval(() => this.estado(),1*1000);\r\n  };\r\n\r\n  async estado(){\r\n\r\n    var accountAddress = await window.tronWeb.trx.getAccount();\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\r\n\r\n    var activeLevels = 0;\r\n\r\n    for (var i = 15; i >= 0; i--) {\r\n\r\n      if (await Utils.contract.usersActiveX3Levels(accountAddress, i).call()) {\r\n        activeLevels++ ;\r\n      }\r\n      \r\n    }\r\n\r\n    var levelPrice = await Utils.contract.levelPrice(activeLevels+1).call();\r\n\r\n    var balanceUSDT = await Utils.contract.balanceOfUSDT(accountAddress).call();\r\n\r\n    balanceUSDT = parseInt(balanceUSDT._hex)/10**6;\r\n\r\n    var aproved = await Utils.contract.allowanceUSDT(accountAddress).call();\r\n\r\n    console.log(aproved);\r\n\r\n    aproved = parseInt(aproved._hex)/10**6;\r\n\r\n    if(aproved > 0){\r\n      aproved = \"Buy next level\"\r\n    }else{\r\n      aproved = \"Register\"\r\n    }\r\n\r\n    this.setState({\r\n      level: activeLevels,\r\n      levelPrice: parseInt(levelPrice._hex)/10**6,\r\n      balanceUSDT: balanceUSDT,\r\n      texto: aproved\r\n    });\r\n\r\n    //console.log(min);\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n  async deposit() {\r\n\r\n\r\n    const { level, levelPrice, balanceUSDT} = this.state;\r\n\r\n    var amount = levelPrice;\r\n\r\n    amount = parseFloat(amount);\r\n\r\n    var accountAddress = await window.tronWeb.trx.getAccount();\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\r\n\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    balanceInTRX = parseFloat(balanceInTRX);//number\r\n\r\n    console.log(balanceInTRX);\r\n    console.log(amount);\r\n\r\n    var owner = await Utils.contract.owner().call();\r\n\r\n    var direccionSP = window.tronWeb.address.fromHex(owner);\r\n\r\n    var aproved = await Utils.contract.allowanceUSDT(accountAddress).call();\r\n\r\n    aproved = parseInt(aproved._hex)/10**6;\r\n\r\n    var LAST_LEVEL = await Utils.contract.LAST_LEVEL().call();\r\n\r\n    if ( balanceInTRX >= 50 && aproved >= amount && balanceUSDT >= amount && level < LAST_LEVEL){\r\n\r\n      var loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n          var getString = loc.split('?')[1];\r\n          var GET = getString.split('&');\r\n          var get = {};\r\n          for(var i = 0, l = GET.length; i < l; i++){\r\n              var tmp = GET[i].split('=');\r\n              get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n          }\r\n          \r\n          if (get['ref']) {\r\n            tmp = get['ref'].split('#');\r\n\r\n            var inversor = await Utils.contract.idToAddress(tmp[0]).call();\r\n\r\n            if ( await Utils.contract.isUserExists(inversor).call() ) {\r\n\r\n              direccionSP = window.tronWeb.address.fromHex(inversor);\r\n            \r\n            }\r\n          }     \r\n        }\r\n\r\n        this.setState({\r\n          sponsor: direccionSP\r\n        });\r\n\r\n\r\n        if ( await Utils.contract.isUserExists(accountAddress).call() ) {\r\n\r\n\r\n          await Utils.contract.buyNewLevel(level+1, amount*10**6).send();\r\n\r\n\r\n        }else{\r\n\r\n          await Utils.contract.registrationExt(direccionSP, amount*10**6).send();\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }else{\r\n\r\n      console.log(aproved);\r\n\r\n      if ( aproved <= 0 ) {\r\n        await Utils.contract.approveUSDT().send();\r\n      }\r\n      \r\n      if (amount > 200 && balanceInTRX > 250) {\r\n\r\n        if ( amount > balanceInTRX) {\r\n          if (balanceInTRX <= 50) {\r\n            window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\r\n          }else{\r\n            document.getElementById(\"amount\").value = balanceInTRX-50;\r\n            window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\r\n          }\r\n          \r\n          \r\n\r\n        }else{\r\n\r\n          document.getElementById(\"amount\").value = amount-50;\r\n          window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\r\n          \r\n        }\r\n      }else{\r\n        window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            Balance: {this.state.balanceUSDT} <strong>USDT</strong><br />\r\n          </h6>\r\n\r\n          <h3>current level = {this.state.level}</h3>\r\n\r\n            <button  onClick={() => this.deposit()} className=\"primary-btn\">{this.state.texto}</button>\r\n            <p>Price {this.state.levelPrice} USDT</p>\r\n            <p>You must have ~ 30 TRX to make the transaction</p>\r\n            \r\n          \r\n        </div>\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link: \"Haz una inversi√≥n para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Link(),1*1000);\r\n\r\n    setInterval(() => this.Investors(),7*1000);\r\n  };\r\n\r\n  async Link() {\r\n\r\n    let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address);\r\n\r\n      var user = await Utils.contract.users(mydireccion).call();\r\n\r\n    if( await Utils.contract.isUserExists(mydireccion).call() ){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      \r\n\r\n      mydireccion = loc+'?ref='+parseInt(user.id._hex);\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversi√≥n para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    var direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var canasta = [];\r\n\r\n    for (var i = 1; i <= 15; i++) {\r\n\r\n      if (await Utils.contract.usersActiveX3Levels(direccion, i).call()) {\r\n\r\n        var matrix = await Utils.contract.usersX3Matrix(direccion, i).call();\r\n        canasta[i] = (\r\n          <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+i}>\r\n            <div className=\"choose__item\">\r\n                <img src={\"img/choose/choose-\"+i+\".svg\"} alt=\"\" width=\"50%\" />\r\n                <h5>Level</h5>\r\n                <p>Referers {matrix[1].length} <strong>|</strong> cycles {parseInt(matrix[1].length/3)}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      }else{\r\n\r\n        canasta[i] = (\r\n          <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+i}>\r\n            <div className=\"choose__item\">\r\n                <h5>Level {i} (Inactive) </h5>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      }\r\n\r\n      this.setState({\r\n        canastas:canasta\r\n  \r\n      });\r\n\r\n      \r\n    }\r\n\r\n\r\n \r\n\r\n\r\n\r\n    \r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    var cosa = await Utils.contract.withdraw().send();\r\n    console.log(cosa);\r\n  };\r\n\r\n\r\n  render() {\r\n    var { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\r\n\r\n    var available = (balanceRef+my);\r\n    available = available.toFixed(6);\r\n    available = parseFloat(available);\r\n\r\n    balanceRef = balanceRef.toFixed(6);\r\n    balanceRef = parseFloat(balanceRef);\r\n\r\n    totalRef = totalRef.toFixed(6);\r\n    totalRef = parseFloat(totalRef);\r\n\r\n    invested = invested.toFixed(6);\r\n    invested = parseFloat(invested);\r\n\r\n    withdrawn = withdrawn.toFixed(6);\r\n    withdrawn = parseFloat(withdrawn);\r\n\r\n    my = my.toFixed(6);\r\n    my = parseFloat(my);\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n<div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"section-title\">\r\n                        <h2>My referral link:</h2>\r\n                        <p>\r\n                            <a style={{\"color\":\"blue\"}} href={link}>{link}</a> &nbsp;&nbsp;\r\n                            <CopyToClipboard text={link}>\r\n                              <button type=\"button\" className=\"primary-btn\">Copy</button>\r\n                            </CopyToClipboard>\r\n                          </p>\r\n                    </div>\r\n                </div>\r\n            </div>        \r\n\r\n          <div className=\"row\">\r\n\r\n            {this.state.canastas}\r\n                    \r\n          </div>\r\n\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  };\r\n\r\n  \r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  };\r\n\r\n\r\n  async fetchAccountAddress() {\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n      accountAddress\r\n    );\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  };\r\n\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  };\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance } = this.state;\r\n    return (\r\n\r\n      <>\r\n        \r\n        <h2>\r\n          Wallet Conected:\r\n        </h2>\r\n        <p>\r\n            <strong>{accountAddress}</strong><br/><br/>\r\n\r\n          <strong>Balance:</strong><br/>\r\n            {accountBalance} <strong>TRX</strong><br/>\r\n            \r\n        </p>\r\n      </>\r\n\r\n    \r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-sm-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-sm-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <div className='tronLink row' onClick={ openTronLink } style={{'padding': '3em'}}>\r\n\r\n            <div className='info col-sm-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div> \r\n\r\n    </>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n<section className=\"hero set-bg\" data-setbg=\"img/hero-bg.jpg\" style={{\"backgroundImage\": \"url('img/hero-bg.jpg')\"}}>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-5\">\r\n                    <div className=\"hero__text\">\r\n                        <TronLinkInfo />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-5 offset-lg-2\">\r\n                    <div className=\"hero__form\">\r\n                        \r\n                        <CrowdFunding />\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n    <section className=\"choose spad\">\r\n        <div className=\"container\">\r\n          <Oficina /> \r\n        </div>\r\n    </section>\r\n\r\n        \r\n\r\n      </>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}