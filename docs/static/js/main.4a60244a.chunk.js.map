{"version":3,"sources":["utils/index.js","components/Home/index.js","components/Contract/index.js","cons.js","components/CrowdFunding/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/BackOffice/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","Home","Component","EarnTron","props","state","texto","sponsor","level","levelPrice","balanceUSDT","aprovedUSDT","contractUSDT","deposit","bind","estado","Utils","window","setInterval","accountAddress","defaultAddress","base58","activeLevels","i","usersActiveX3Levels","call","tokenUSDT","tokenAddress","balanceOf","parseInt","_hex","allowance","aproved","remaining","text","setState","amount","parseFloat","trx","getBalance","balanceInTRX","console","log","owner","direccionSP","address","fromHex","approve","send","LAST_LEVEL","loc","document","location","href","indexOf","getString","split","GET","get","l","length","tmp","unescape","decodeURI","idToAddress","inversor","isUserExists","buyNewLevel","registrationExt","alert","getElementById","value","className","onClick","direccion","link","registered","balanceRef","totalRef","invertido","ganado","my","withdrawn","canastas","key","style","Investors","Link","withdraw","getAccount","mydireccion","users","user","id","canasta","personas","ownerPrice","usersX3Matrix","matrix","src","alt","width","cosa","type","TronLinkInfo","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","account","accountAddressInBase58","balanceInSun","fromSun","getBandwidth","BackOffice","data-setbg","WEBSTORE_URL","logo","TronLinkLogo","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","hex","toHex","on","interrogant","url","root","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.4a60244a.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  \r\n  render() {\r\n\r\n      return (\r\n        <>\r\n        \r\n\r\n        </>\r\n      );\r\n  }\r\n}\r\n","import cons from \"../../cons.js\";\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\n\r\nconst SC = \"TJcELfBcR2WEWUoj7acdHqBddGzaYhBVwW\";// direccion del contrato\r\n\r\nexport default {proxy, SC};","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      texto: \"Loading...\",\r\n      sponsor: \"\",\r\n      level: \"Loading...\",\r\n      levelPrice: 0,\r\n      balanceUSDT: \"Loading...\",\r\n      aprovedUSDT: 0,\r\n      contractUSDT:{}\r\n  \r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.estado = this.estado.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.estado();\r\n    setInterval(() => this.estado(),1*1000);\r\n  };\r\n\r\n  async estado(){\r\n    \r\n    var accountAddress = window.tronWeb.defaultAddress.base58\r\n\r\n    //console.log(accountAddress);\r\n\r\n    var activeLevels = 0;\r\n\r\n    for (var i = 15; i >= 0; i--) {\r\n\r\n      if (await Utils.contract.usersActiveX3Levels(accountAddress, i).call()) {\r\n        activeLevels++ ;\r\n      }\r\n      \r\n    }\r\n\r\n    var levelPrice = await Utils.contract.levelPrice(activeLevels+1).call();\r\n\r\n    var tokenAddress = await Utils.contract.tokenUSDT().call();\r\n\r\n    const contractUSDT = await window.tronWeb.contract().at(tokenAddress);\r\n\r\n    var balanceUSDT = await contractUSDT.balanceOf(accountAddress).call();\r\n\r\n    balanceUSDT = parseInt(balanceUSDT._hex)/10**6;\r\n\r\n    var aproved = await contractUSDT.allowance(accountAddress, contractAddress).call();\r\n\r\n    //console.log(aproved);\r\n\r\n    aproved = parseInt(aproved.remaining._hex)/10**6;\r\n\r\n    var text;\r\n    if(aproved > 0){\r\n      if (activeLevels === 0){\r\n        text = \"Register and buy the first level\"\r\n      }else{\r\n        text = \"Buy next level\"\r\n      }\r\n      \r\n    }else{\r\n      text = \"Link Wallet\"\r\n    }\r\n\r\n    this.setState({\r\n      level: activeLevels,\r\n      levelPrice: parseInt(levelPrice._hex)/10**6,\r\n      balanceUSDT: balanceUSDT,\r\n      texto: text,\r\n      aprovedUSDT: aproved,\r\n      contractUSDT: contractUSDT\r\n    });\r\n\r\n    //console.log(min);\r\n  }\r\n\r\n  async deposit() {\r\n\r\n    const { level, levelPrice, balanceUSDT, aprovedUSDT, contractUSDT} = this.state;\r\n\r\n    var amount = levelPrice;\r\n\r\n    amount = parseFloat(amount);\r\n\r\n    var accountAddress =  window.tronWeb.defaultAddress.base58;\r\n\r\n    var balanceInTRX  = await window.tronWeb.trx.getBalance(); //number\r\n    balanceInTRX = balanceInTRX/10**6;\r\n\r\n    console.log(balanceInTRX);\r\n    console.log(amount);\r\n\r\n    var owner = await Utils.contract.owner().call();\r\n\r\n    var direccionSP = window.tronWeb.address.fromHex(owner);\r\n\r\n    var aproved = aprovedUSDT;\r\n\r\n    if ( aproved <= 0 ) {\r\n      await contractUSDT.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\r\n      return;\r\n    }\r\n\r\n    var LAST_LEVEL = await Utils.contract.LAST_LEVEL().call();\r\n\r\n    if ( balanceInTRX >= 50 && aproved >= amount && balanceUSDT >= amount && level < LAST_LEVEL){\r\n\r\n      var loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n          var getString = loc.split('?')[1];\r\n          var GET = getString.split('&');\r\n          var get = {};\r\n          for(var i = 0, l = GET.length; i < l; i++){\r\n              var tmp = GET[i].split('=');\r\n              get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n          }\r\n          \r\n          if (get['ref']) {\r\n            tmp = get['ref'].split('#');\r\n\r\n            var inversor = await Utils.contract.idToAddress(tmp[0]).call();\r\n\r\n            if ( await Utils.contract.isUserExists(inversor).call() ) {\r\n\r\n              direccionSP = window.tronWeb.address.fromHex(inversor);\r\n            \r\n            }\r\n          }     \r\n        }\r\n\r\n        this.setState({\r\n          sponsor: direccionSP\r\n        });\r\n\r\n\r\n        if ( await Utils.contract.isUserExists(accountAddress).call() ) {\r\n\r\n\r\n          await Utils.contract.buyNewLevel(level+1, amount*10**6).send();\r\n\r\n\r\n        }else{\r\n\r\n          await Utils.contract.registrationExt(direccionSP, amount*10**6).send();\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }else{\r\n      \r\n      if (amount > 200 && balanceInTRX > 250) {\r\n\r\n        if ( amount > balanceInTRX) {\r\n          if (balanceInTRX <= 50) {\r\n            window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\r\n          }else{\r\n            document.getElementById(\"amount\").value = balanceInTRX-50;\r\n            window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\r\n          }\r\n          \r\n          \r\n\r\n        }else{\r\n\r\n          document.getElementById(\"amount\").value = amount-50;\r\n          window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\r\n          \r\n        }\r\n      }else{\r\n        window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            Balance: {this.state.balanceUSDT} <strong>USDT</strong><br />\r\n          </h6>\r\n\r\n          <h3>current level = {this.state.level}</h3>\r\n\r\n            <button  onClick={() => this.deposit()} className=\"primary-btn\">{this.state.texto}</button>\r\n            <p>Price {this.state.levelPrice} USDT</p>\r\n            <p>You must have ~ 50 TRX to make the transaction</p>\r\n            \r\n          \r\n        </div>\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invertido: 0,\r\n      ganado: 0,\r\n      my: 0,\r\n      withdrawn: 0,\r\n      canastas: [(\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+1}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 1 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+2}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 2 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+3}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 3 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+4}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 4 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+5}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 5 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+6}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 6 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+7}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 7 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+8}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 8 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+9}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 9 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+10}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 10 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+11}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 11 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+12}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 12 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+13}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 13 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+14}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 14 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      ),\r\n      (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+15}>\r\n          <div className=\"choose__item\">\r\n            <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level 15 (Inactive) </strong></span>\r\n          </div>\r\n        </div>\r\n      )\r\n    ]\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Link(),1*1000);\r\n    setInterval(() => this.Investors(),7*1000);\r\n  };\r\n\r\n  async Link() {\r\n\r\n    let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address);\r\n\r\n      var user = await Utils.contract.users(mydireccion).call();\r\n\r\n    if( await Utils.contract.isUserExists(mydireccion).call() ){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      \r\n\r\n      mydireccion = loc+'?ref='+parseInt(user.id._hex);\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var LAST_LEVEL = 15;\r\n\r\n    var canasta = this.state.canastas;\r\n\r\n    var invertido = 0;\r\n    var personas = 0;\r\n    var ganado = 0;\r\n\r\n    var levelPrice= [];\r\n    var ownerPrice= [];\r\n    levelPrice[1] = 20;\r\n    ownerPrice[1] = 0;\r\n    ownerPrice[4] = 4;\r\n    var i;\r\n    for (i = 2; i <= LAST_LEVEL; i++) {\r\n        levelPrice[i] = levelPrice[i-1] * 2;\r\n        if (i >= 5) {\r\n            ownerPrice[i] = ownerPrice[i-1] * 2;\r\n        }else{\r\n          if (i !== 4) {\r\n            ownerPrice[i] = 0;\r\n          } \r\n        }\r\n    }\r\n\r\n    //console.log(levelPrice);\r\n    //console.log(ownerPrice);\r\n\r\n    for (i = 1; i <= LAST_LEVEL; i++) {\r\n\r\n      if (await Utils.contract.usersActiveX3Levels(direccion, i).call()) {\r\n\r\n        invertido += levelPrice[i];\r\n\r\n        var matrix = await Utils.contract.usersX3Matrix(direccion, i).call();\r\n        matrix[3] = parseInt(matrix[3]._hex);\r\n\r\n        personas += (matrix[1].length+(matrix[3]*3));\r\n\r\n        ganado += (matrix[1].length+(matrix[3]*3))*(ownerPrice[i]);\r\n\r\n        //console.log(ganado);\r\n        canasta[i-1] = (\r\n          <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+i}>\r\n            <div className=\"choose__item\">\r\n                <img src={\"img/choose/choose-\"+i+\".svg\"} alt=\"\" width=\"50%\" />\r\n                <h5>Level</h5>\r\n                <p>Referers {matrix[1].length+(matrix[3]*3)} <strong>|</strong> cycles {matrix[3]}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      }else{\r\n\r\n        canasta[i-1] = (\r\n          <div className=\"col-lg-4 col-md-4 col-sm-6\" key={\"level\"+i}>\r\n            <div className=\"choose__item\">\r\n                <span style={{\"fontSize\" : \"22px\"}}><br /><strong>Level {i} (Inactive) </strong></span>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      }\r\n\r\n      this.setState({\r\n        canastas:canasta\r\n        \r\n      });\r\n\r\n    }\r\n\r\n    this.setState({\r\n      invertido: invertido,\r\n      ganado: ganado,\r\n      personas: personas\r\n      \r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    var cosa = await Utils.contract.withdraw().send();\r\n    console.log(cosa);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"section-title\">\r\n              <h2>My referral link:</h2>\r\n              <p>\r\n                <a style={{\"color\":\"blue\"}} href={this.state.link}>{this.state.link}</a> &nbsp;&nbsp;\r\n                <CopyToClipboard text={this.state.link}>\r\n                  <button type=\"button\" className=\"primary-btn\">Copy</button>\r\n                </CopyToClipboard>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>    \r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"section-title\">\r\n              <h2>My invested:</h2>\r\n              <p>\r\n                {this.state.invertido} USDT\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"section-title\">\r\n              <h2>Earned:</h2>\r\n              <p>\r\n              {this.state.ganado} USDT\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"section-title\">\r\n              <h2>People:</h2>\r\n              <p>\r\n              {this.state.personas}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>   \r\n        <hr></hr>\r\n\r\n        <div className=\"row\">\r\n\r\n          {this.state.canastas}\r\n                  \r\n        </div>\r\n\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  };\r\n\r\n  \r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  };\r\n\r\n\r\n  async fetchAccountAddress() {\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n      accountAddress\r\n    );\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  };\r\n\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  };\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance } = this.state;\r\n    return (\r\n\r\n      <>\r\n        \r\n        <h2>\r\n          Wallet:\r\n        </h2>\r\n        <p>\r\n            <strong>{accountAddress}</strong><br/><br/>\r\n\r\n          <strong>Balance:</strong><br/>\r\n            {accountBalance} <strong>TRX</strong><br/>\r\n            \r\n        </p>\r\n      </>\r\n\r\n    \r\n    );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\n\r\nexport default class BackOffice extends Component {\r\n  \r\n  render() {\r\n\r\n      return (\r\n        <>\r\n        <section className=\"hero set-bg\" data-setbg=\"img/hero-bg.jpg\" style={{\"backgroundImage\": \"url('img/hero-bg.jpg')\"}}>\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-lg-5\">\r\n                      <div className=\"hero__text\">\r\n                          <TronLinkInfo tronWeb={window.tronWeb}/>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"col-lg-5 offset-lg-2\">\r\n                      <div className=\"hero__form\">\r\n                          \r\n                          <CrowdFunding />\r\n                          \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"choose spad\">\r\n          <div className=\"container\">\r\n            <Oficina /> \r\n          </div>\r\n        </section>\r\n\r\n      </>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-sm-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-sm-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <div className='tronLink row' onClick={ openTronLink } style={{'padding': '3em'}}>\r\n\r\n            <div className='info col-sm-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div> \r\n\r\n    </>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport Home from \"../Home\";\r\nimport BackOffice from \"../BackOffice\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          console.log(\"intento \"+tries);\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    var getString = \"/\";\r\n    var loc = document.location.href;\r\n    var interrogant = \"\";\r\n    //console.log(loc);\r\n    if(loc.indexOf('?')>0){\r\n              \r\n      getString = loc.split('?')[1];\r\n      getString = getString.split('#')[0];\r\n      interrogant = \"?\";\r\n    }\r\n\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n      switch (getString) {\r\n        case \"BackOffice\": \r\n        case \"backOffice\":\r\n        case \"backoffice\": return(<><BackOffice url={interrogant+getString}/></>);\r\n  \r\n        case \"ViewOffice\": \r\n        case \"viewOffice\": \r\n        case \"viewoffice\": return(<><BackOffice url={interrogant+getString}/></>);\r\n      \r\n        default:  return(<><Home /></>);\r\n      }\r\n\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}